if (!project.rootProject.file('local.properties').exists()) {
  println "Not applying bintray.gradle due to lack of local.properties!"
  return
}

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def shard = ext.shard as String

version "${versions.publishVersion}"
group "com.afollestad.material-dialogs"

publishing {
  publications {
    Production(MavenPublication) {
      artifact("$buildDir/outputs/aar/$shard-release.aar")
      groupId "com.afollestad.material-dialogs"
      artifactId shard
      version this.version

      pom.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')

        // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
        configurations.implementation.allDependencies.each {
          // Ensure dependencies such as fileTree are not included in the pom.
          if (it.name != 'unspecified') {
            def dependencyNode = dependenciesNode.appendNode('dependency')
            dependencyNode.appendNode('groupId', it.group)
            dependencyNode.appendNode('artifactId', it.name)
            dependencyNode.appendNode('version', it.version)
          }
        }
      }
    }
  }
}

bintray {
  user = properties.getProperty('bintray.user')
  key = properties.getProperty('bintray.key')

  pkg {
    repo = 'maven'
    name = "material-dialogs:$shard"
    userOrg = 'drummer-aidan'
    licenses = ['Apache-2.0']
    vcsUrl = 'https://github.com/afollestad/material-dialogs.git'
    githubRepo = 'afollestad/material-dialogs'
    publications = ['Production']
    configurations = ['archives']
    publish = true
    dryRun = false

    version {
      name = this.version
      released = new Date()
      vcsTag = this.version
    }
  }
}